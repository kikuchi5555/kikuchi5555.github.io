{"version":3,"sources":["img/logo.svg","img/particle.png","Animation.js","LogoBg.js","App.js","index.js"],"names":["module","exports","Stars","group","useRef","useState","theta","setTheta","useFrame","r","Math","sin","THREE","degToRad","s","current","rotation","set","scale","useMemo","color","Array","fill","map","i","random","geo","mat","coords","ref","p1","p2","p3","key","geometry","material","position","Animation","resize","scroll","CreateParticles","scene","font","path","particleImg","camera","renderer","this","raycaster","mouse","colorChange","buttom","data","text","amount","particleSize","particleColor","textSize","area","ease","alpha","setup","visibleWidthAtZDepth","visibleHeightAtZDepth","transparent","planeArea","visible","createText","x","y","vector","unproject","dir","sub","normalize","distance","z","currenPosition","clone","add","multiplyScalar","particles","attributes","setTimeout","document","addEventListener","onMouseDown","bind","onMouseMove","onMouseUp","event","clientX","window","innerWidth","clientY","innerHeight","level","time","performance","now","PI","setFromCamera","intersects","intersectObject","length","pos","copy","geometryCopy","coulors","customColor","size","mx","point","my","l","count","initX","getX","initY","getY","initZ","getZ","px","py","pz","setHSL","setXYZ","g","b","needsUpdate","array","dx","dy","mouseDistance","d","f","t","atan2","cos","thePoints","svgGroup","shapes","forEach","push","toShapes","computeBoundingBox","xMid","boundingBox","max","min","yMid","center","holeShapes","q","shape","holes","j","hole","apply","colors","sizes","amountPoints","type","getSpacedPoints","element","a","mesh","geoParticles","setFromPoints","translate","setAttribute","uniforms","value","pointTexture","uAlpha","vertexShader","fragmentShader","blending","depthTest","depth","cameraOffset","vFOV","fov","tan","abs","aspect","x1","y1","x2","y2","sqrt","pow","Environment","particle","container","querySelector","createCamera","createRenderer","bindEvents","onWindowResize","createParticles","render","clientWidth","clientHeight","setClearColor","setSize","setPixelRatio","devicePixelRatio","outputEncoding","appendChild","domElement","setAnimationLoop","updateProjectionMatrix","LogoBg","useEffect","manager","onLoad","typo","load","SVGLoader","LogoSVG","paths","particleImage","preload","id","LazyLoad","props","isLoad","setLoad","duration","children","EnterText","characterList","split","setText","refText","interval","setInterval","clearInterval","App","className","startDetailAnim","href","target","rel","startSkillAnim","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efbb0593.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8bb2c754.svg\";","module.exports = __webpack_public_path__ + \"static/media/particle.f6ea4f08.png\";","import * as THREE from 'three/src/Three'\nimport React, { useState, useRef, useMemo } from 'react'\n\nimport { Canvas, useFrame } from 'react-three-fiber'\n\nfunction Stars() {\n  let group = useRef()\n  const [theta, setTheta] = useState(0);\n  useFrame(() => {\n    setTheta(theta + 0.1)\n    // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n    const r = 1 * Math.sin(THREE.Math.degToRad((theta * 0.5)))\n    const s = Math.sin(THREE.Math.degToRad(theta * 1))\n    group.current.rotation.set(r, r, r)\n    group.current.scale.set(s, s, s)\n  })\n  const [geo, mat, coords] = useMemo(() => {\n    const geo = new THREE.SphereBufferGeometry(1, 20, 20)\n    const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color('#eaeaea') })\n    const coords = new Array(2000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat, coords]\n  }, [])\n  return (\n    <group ref={group}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n    </group>\n  )\n}\n\n\nexport default function Animation() {\n  return (\n    <Canvas resize={{\n      scroll: false\n    }}>\n      <Stars />\n    </Canvas>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport * as THREE from 'three/src/Three'\n// import Logo from './img/logo_texture.png'\nimport LogoSVG from './img/logo.svg'\nimport particleImage from './img/particle.png'\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader\";\n\nclass CreateParticles {\n      \n  constructor( scene, font, path, particleImg, camera, renderer ) {\n    this.scene = scene;\n    this.font = font;\n    this.path = path;\n    this.particleImg = particleImg;\n    this.camera = camera;\n    this.renderer = renderer;\n    \n    this.raycaster = new THREE.Raycaster();\n    this.mouse = new THREE.Vector2(0, 0);\n    \n    this.colorChange = new THREE.Color();\n\n    this.buttom = false;\n\n    this.data = {\n      text: 'nodel inc.',\n      amount: 1500,\n      particleSize: 1,\n      particleColor: 0xffffff,\n      textSize: 16,\n      area: 80,\n      ease: .2,\n      alpha: 1.0\n    }\n\n    this.setup();\n    // this.bindEvents();\n  }\n\n\n  setup(){\n    const geometry = new THREE.PlaneGeometry( this.visibleWidthAtZDepth( 100, this.camera ), this.visibleHeightAtZDepth( 100, this.camera ));\n    const material = new THREE.MeshBasicMaterial( { color: 0x00ff00, transparent: true } );\n    this.planeArea = new THREE.Mesh( geometry, material );\n    this.planeArea.visible = false;\n    this.createText();\n\n    this.mouse.x = 0;\n    this.mouse.y = -.1;\n\n    const vector = new THREE.Vector3( this.mouse.x, this.mouse.y, 0.5);\n    vector.unproject( this.camera );\n    const dir = vector.sub( this.camera.position ).normalize();\n    const distance = - this.camera.position.z / dir.z;\n    this.currenPosition = this.camera.position.clone().add( dir.multiplyScalar( distance ) );\n    // eslint-disable-next-line no-unused-vars\n    const pos = this.particles.geometry.attributes.position;\n    this.buttom = true;\n    this.data.ease = .05;\n\n    setTimeout(() => {\n      this.mouse.x = -1.;\n      this.mouse.y = -1.;\n    }, 1000);\n\n    // setTimeout(() => {\n    //   document.addEventListener( 'mousemove', this.onMouseMove.bind( this ));\n    // }, 1100);\n  }\n\n  bindEvents() {\n    document.addEventListener( 'mousedown', this.onMouseDown.bind( this ));\n    document.addEventListener( 'mousemove', this.onMouseMove.bind( this ));\n    document.addEventListener( 'mouseup', this.onMouseUp.bind( this ));\n  }\n\n  onMouseDown(event){\n    this.mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    this.mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n    const vector = new THREE.Vector3( this.mouse.x, this.mouse.y, 0.5);\n    vector.unproject( this.camera );\n    const dir = vector.sub( this.camera.position ).normalize();\n    const distance = - this.camera.position.z / dir.z;\n    this.currenPosition = this.camera.position.clone().add( dir.multiplyScalar( distance ) );\n    // eslint-disable-next-line no-unused-vars\n    const pos = this.particles.geometry.attributes.position;\n    this.buttom = true;\n    this.data.ease = .01;\n    \n  }\n\n  onMouseUp(){\n    this.buttom = false;\n    this.data.ease = .05;\n  }\n\n  onMouseMove(event) { \n      this.mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      this.mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n  }\n\n  render( level ){ \n    const time = ((.01 * performance.now())%12)/12;\n    const zigzagTime = (1 + (Math.sin( time * 2 * Math.PI )))/6;\n\n    this.raycaster.setFromCamera( this.mouse, this.camera );\n\n    const intersects = this.raycaster.intersectObject( this.planeArea );\n\n    if ( intersects.length > 0 ) {\n\n      const pos = this.particles.geometry.attributes.position\n      const copy = this.geometryCopy.attributes.position;\n      const coulors = this.particles.geometry.attributes.customColor;\n      const size = this.particles.geometry.attributes.size;\n\n        const mx = intersects[ 0 ].point.x;\n        const my = intersects[ 0 ].point.y;\n        // eslint-disable-next-line no-unused-vars\n        const mz = intersects[ 0 ].point.z;\n\n        for ( var i = 0, l = pos.count; i < l; i++) {\n\n          const initX = copy.getX(i);\n          const initY = copy.getY(i);\n          const initZ = copy.getZ(i);\n\n          let px = pos.getX(i);\n          let py = pos.getY(i);\n          let pz = pos.getZ(i);\n\n          this.colorChange.setHSL( 0., 0. , 0. )\n          coulors.setXYZ( i, this.colorChange.r, this.colorChange.g, this.colorChange.b )\n          coulors.needsUpdate = true;\n\n          size.array[ i ]  = this.data.particleSize;\n          size.needsUpdate = true;\n\n          let dx = mx - px;\n          let dy = my - py;\n          // eslint-disable-next-line no-unused-vars\n          const dz = mz - pz;\n\n          const mouseDistance = this.distance( mx, my, px, py )\n          let d = ( dx = mx - px ) * dx + ( dy = my - py ) * dy;\n          const f = - this.data.area/d;\n\n          if( this.buttom ){ \n\n            const t = Math.atan2( dy, dx );\n            px -= f * Math.cos( t );\n            py -= f * Math.sin( t );\n\n            coulors.setXYZ( i, this.colorChange.r, this.colorChange.g, this.colorChange.b )\n            coulors.needsUpdate = true;\n\n            if ((px > (initX + 70)) || ( px < (initX - 70)) || (py > (initY + 70) || ( py < (initY - 70)))){\n\n              coulors.setXYZ( i, this.colorChange.r, this.colorChange.g, this.colorChange.b )\n              coulors.needsUpdate = true;\n            }\n\n          }else{\n          \n            if( mouseDistance < this.data.area ){\n\n              if(i%5 === 0){\n\n                const t = Math.atan2( dy, dx );\n                px -= .03 * Math.cos( t );\n                py -= .03 * Math.sin( t );\n\n                coulors.setXYZ( i, this.colorChange.r, this.colorChange.g, this.colorChange.b )\n                coulors.needsUpdate = true;\n\n                size.array[ i ]  =  this.data.particleSize /1.2;\n                size.needsUpdate = true;\n\n              }else{\n\n                const t = Math.atan2( dy, dx );\n                px += f * Math.cos( t );\n                py += f * Math.sin( t );\n\n                pos.setXYZ( i, px, py, pz );\n                pos.needsUpdate = true;\n\n                size.array[ i ]  = this.data.particleSize * 1.3 ;\n                size.needsUpdate = true;\n              }\n\n              if ((px > (initX + 10)) || ( px < (initX - 10)) || (py > (initY + 10) || ( py < (initY - 10)))){\n                coulors.setXYZ( i, this.colorChange.r, this.colorChange.g, this.colorChange.b )\n                coulors.needsUpdate = true;\n\n                size.array[ i ]  = this.data.particleSize /1.8;\n                size.needsUpdate = true;\n\n              }\n            }\n\n          }\n\n          px += ( initX  - px ) * this.data.ease;\n          py += ( initY  - py ) * this.data.ease;\n          pz += ( initZ  - pz ) * this.data.ease;\n\n          pos.setXYZ( i, px, py, pz );\n          pos.needsUpdate = true;\n\n        }\n    }\n  }\n\n  createText(){ \n    let thePoints = [];\n    const svgGroup = new THREE.Group();\n\n    // let shapes = this.font.generateShapes( this.data.text , this.data.textSize  );\n    // const shapes = SVGLoader.createShapes( this.path );\n    const shapes = [];\n    this.path.forEach(path => {\n      shapes.push(...path.toShapes());\n    });\n    let geometry = new THREE.ShapeGeometry( shapes );\n    geometry.computeBoundingBox();\n  \n    const xMid = - 0.5 * ( geometry.boundingBox.max.x - geometry.boundingBox.min.x );\n    const yMid =  (geometry.boundingBox.max.y - geometry.boundingBox.min.y)/1.5;\n\n    geometry.center();\n\n    let holeShapes = [];\n\n    for ( let q = 0; q < shapes.length; q ++ ) {\n\n      let shape = shapes[ q ];\n\n      if ( shape.holes && shape.holes.length > 0 ) {\n\n        for ( let  j = 0; j < shape.holes.length; j ++ ) {\n\n          let  hole = shape.holes[ j ];\n          holeShapes.push( hole );\n        }\n      }\n    }\n    shapes.push.apply( shapes, holeShapes );\n\n    let colors = [];\n    let sizes = [];\n          \n    for ( let  x = 0; x < shapes.length; x ++ ) {\n\n      let shape = shapes[ x ];\n\n      const amountPoints = ( shape.type === 'Path') ? this.data.amount/2 : this.data.amount;\n\n      let points = shape.getSpacedPoints( amountPoints ) ;\n\n      points.forEach( ( element, z ) => {\n        const a = new THREE.Vector3( element.x, element.y, 0 );\n        thePoints.push( a );\n        colors.push( this.colorChange.r, this.colorChange.g, this.colorChange.b);\n        sizes.push( 1 )\n      });\n    }\n          \n    for ( let  x = 0; x < shapes.length; x ++ ) {\n      let shape = shapes[ x ];\n      const geometry = new THREE.BufferGeometry(shape);\n      const mesh = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({color: 0x6699FF}));\n      svgGroup.add(mesh);\n    }\n    this.svgGroup = svgGroup;\n    this.scene.add( this.svgGroup );\n\n    let geoParticles = new THREE.BufferGeometry().setFromPoints( thePoints );\n    geoParticles.translate( xMid, -yMid, 0 );\n    geoParticles.scale( .1, -.1, 0 );\n        \n    geoParticles.setAttribute( 'customColor', new THREE.Float32BufferAttribute( colors, 3 ) );\n    geoParticles.setAttribute( 'size', new THREE.Float32BufferAttribute( sizes, 1) );\n\n    const material = new THREE.ShaderMaterial( {\n\n      uniforms: {\n        color: { value: new THREE.Color( 0xffffff ) },\n        pointTexture: { value: this.particleImg },\n        uAlpha: { value: this.data.alpha }\n      },\n      vertexShader: `\n        attribute float size;\n        attribute vec3 customColor;\n        varying vec3 vColor;\n      \n        void main() {\n          vColor = customColor;\n          vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n          gl_PointSize = size * ( 300.0 / -mvPosition.z );\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      `,\n      fragmentShader: `\n        uniform vec3 color;\n        uniform sampler2D pointTexture;\n        uniform float uAlpha;\n        varying vec3 vColor;\n      \n        void main() {\n          gl_FragColor = vec4( color * vColor, uAlpha );\n          gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n        }\n      `,\n\n      blending: THREE.AdditiveBlending,\n      depthTest: false,\n      transparent: true,\n    } );\n\n    this.particles = new THREE.Points( geoParticles, material );\n    this.scene.add( this.particles );\n\n    this.geometryCopy = new THREE.BufferGeometry();\n    this.geometryCopy.copy( this.particles.geometry );\n  }\n\n  visibleHeightAtZDepth ( depth, camera ) {\n    const cameraOffset = camera.position.z;\n    if ( depth < cameraOffset ) depth -= cameraOffset;\n    else depth += cameraOffset;\n\n    const vFOV = camera.fov * Math.PI / 180; \n\n    return 2 * Math.tan( vFOV / 2 ) * Math.abs( depth );\n  }\n\n  visibleWidthAtZDepth( depth, camera ) {\n    const height = this.visibleHeightAtZDepth( depth, camera );\n    return height * camera.aspect;\n  }\n\n  distance (x1, y1, x2, y2){\n    return Math.sqrt(Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2));\n  }\n}\n\nclass Environment {\n    \n  constructor( font, path, particle ){ \n    this.font = font;\n    this.path = path;\n    this.particle = particle;\n    this.container = document.querySelector( '#magic' );\n    this.scene = new THREE.Scene();\n    this.createCamera();\n    this.createRenderer();\n    this.setup()\n    this.bindEvents();\n  }\n\n  bindEvents(){\n    window.addEventListener( 'resize', this.onWindowResize.bind( this ));\n    \n  }\n\n  setup(){ \n    this.createParticles = new CreateParticles( this.scene, this.font, this.path, this.particle, this.camera, this.renderer );\n  }\n\n  render() {\n     this.createParticles.render()\n     this.renderer.render( this.scene, this.camera )\n  }\n\n  createCamera() {\n    this.camera = new THREE.PerspectiveCamera( 65, this.container.clientWidth /  this.container.clientHeight, 1, 10000 );\n    this.camera.position.set( 0,0, 100 );\n  }\n\n  createRenderer() {\n    this.renderer = new THREE.WebGLRenderer({ alpha: true });\n    this.renderer.setClearColor(0x000000, 0);\n    this.renderer.setSize( this.container.clientWidth, this.container.clientHeight );\n\n    this.renderer.setPixelRatio( Math.min( window.devicePixelRatio, 2));\n\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.container.appendChild( this.renderer.domElement );\n\n    this.renderer.setAnimationLoop(() => { this.render() })\n\n  }\n\n  onWindowResize(){\n    this.camera.aspect = this.container.clientWidth / this.container.clientHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize( this.container.clientWidth, this.container.clientHeight );\n  }\n}\n\nexport default function LogoBg() {\n  useEffect(() => {\n    const preload = () => {\n\n      let manager = new THREE.LoadingManager();\n      manager.onLoad = function() { \n        // eslint-disable-next-line no-unused-vars\n        const environment = new Environment( typo, path, particle );\n      }\n    \n      var typo = null;\n      var path = null\n      const loader = new THREE.FontLoader( manager );\n      // eslint-disable-next-line no-unused-vars\n      const font = loader.load('https://res.cloudinary.com/dydre7amr/raw/upload/v1612950355/font_zsd4dr.json', function ( font ) { typo = font; });\n      const svgloader = new SVGLoader(manager);\n      svgloader.load(LogoSVG, (data) => {\n        path = data.paths\n      });\n      // eslint-disable-next-line no-unused-vars\n      const particle = new THREE.TextureLoader( manager ).load(particleImage);\n    }\n    \n    preload ();\n\n    // const scene = new THREE.Scene();\n\n    // const renderer = new THREE.WebGLRenderer({\n    //   canvas: document.querySelector('#logo-bg'),\n    //   alpha: true,\n    //   antialias: true\n    // });\n\n    // // カメラ\n    // var camera = new THREE.PerspectiveCamera( 50, window.innerWidth / window.innerHeight, 1, 1000 );\n    // camera.position.set(0, 0, 10);\n\n    // onResize();\n\n    // // ここから表示処理\n    // // =============================\n\n    // // ライト\n    // var light = new THREE.AmbientLight( 0xffffff );\n    // scene.add( light );\n\n    // // 画像を読み込む\n    // var texture = new THREE.TextureLoader().load(Logo,\n    // (tex) => { // 読み込み完了時\n    //     // 縦横比を保って適当にリサイズ\n    //     const w = 1.8;\n    //     const h = tex.image.height/(tex.image.width/w);\n\n    //     // 平面\n    //     const geometry = new THREE.PlaneBufferGeometry(1, 1, 32, 32)\n    //     // const material = new THREE.MeshPhongMaterial( { map:texture } );\n\n    //     const uniforms = {\n    //       uTexture: {\n    //         //texture data\n    //         value: texture\n    //       },\n    //       uOffset: {\n    //         //distortion strength\n    //         value: new THREE.Vector2(0.0, 0.0)\n    //       },\n    //       uAlpha: {\n    //         //opacity\n    //         value: 0\n    //       }\n      \n    //     }\n\n    //     const material = new THREE.ShaderMaterial({\n    //       uniforms: uniforms,\n    //       vertexShader: `\n    //         varying vec2 vUv;\n      \n    //         void main() {\n    //           vUv = uv;\n    //           vec3 newPosition = position;\n    //           gl_Position = projectionMatrix * modelViewMatrix * vec4( newPosition, 1.0 );\n    //         }\n    //       `,\n    //       fragmentShader: `\n    //         uniform sampler2D uTexture;\n    //         uniform vec2 uOffset;\n    //         varying vec2 vUv;\n           \n    //         void main() {\n    //           float r = texture2D(uTexture,vUv + uOffset).r;\n    //           vec2 gb = texture2D(uTexture,vUv).gb;\n    //           float a = texture2D(uTexture,vUv).a;\n    //           gl_FragColor = vec4(r,gb,a);\n    //         }\n    //       `,\n    //       transparent: true\n    //     });\n\n    //     const plane = new THREE.Mesh( geometry, material );\n    //     plane.scale.set(w, h, 1);\n    //     scene.add( plane );\n    // });\n\n    // // レンダリング\n    // function render() {\n    //     requestAnimationFrame(render);\n    //     renderer.render(scene, camera);\n    // }\n    // render();\n\n    // // ===========================\n\n    // // リサイズイベント発生時に実行\n    // window.addEventListener('resize', onResize);\n\n    // function onResize() {\n    //   // サイズを取得\n    //   const width = window.innerWidth;\n    //   const height = window.innerHeight;\n\n    //   // レンダラーのサイズを調整する\n    //   renderer.setPixelRatio(window.devicePixelRatio);\n    //   renderer.setSize(width, height);\n\n    //   camera.aspect = width / height;\n    //   camera.updateProjectionMatrix()\n    // }\n\n    // return () => {\n    //   window.removeEventListener('resize', onResize);\n    // }\n  }, []);\n\n  return (\n    // <canvas id=\"logo-bg\" />\n    <div id=\"magic\"></div>\n  )\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport './css/App.scss';\nimport Animation from './Animation'\nimport LogoBg from './LogoBg'\n// import Logo from './img/logo.svg'\n\nfunction App() {\n  const startDetailAnim = 1500\n  const startSkillAnim = 2000\n\n  return (\n    <div className=\"app\">\n      <div className=\"mv\">\n        {/* <div className=\"logo\">\n          <img src={Logo} alt=\"nodel inc.\" />\n        </div> */}\n        <div className=\"detail\">\n          {/* <h1 className=\"detail__heading\"><LazyLoad duration={startDetailAnim}><EnterText>nodel inc.</EnterText></LazyLoad></h1> */}\n          <p className=\"detail__text\">\n            <LazyLoad duration={startDetailAnim + 400}><EnterText>Front-end Development</EnterText><br/></LazyLoad>\n            <LazyLoad duration={startDetailAnim + 800}><EnterText>Web Design</EnterText><br/></LazyLoad>\n            <LazyLoad duration={startDetailAnim + 1200}><a href=\"https://github.com/kikuchi5555\" target=\"_blank\" rel=\"noopener noreferrer\"><EnterText>GitHub →</EnterText></a></LazyLoad>\n          </p>\n        </div>\n        <div className=\"skill\">\n          <ul className=\"skill__list\">\n            <LazyLoad duration={startSkillAnim}><li className=\"skill__item\"><EnterText>CSS/SCSS/Sass/Stylus</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 400}><li className=\"skill__item\"><EnterText>JavaScript</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 800}><li className=\"skill__item\"><EnterText>jQuery</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 1000}><li className=\"skill__item\"><EnterText>TypeScript</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 1200}><li className=\"skill__item\"><EnterText>Vue.js</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 1400}><li className=\"skill__item\"><EnterText>React</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 1600}><li className=\"skill__item\"><EnterText>Angular.js</EnterText></li></LazyLoad>\n            <LazyLoad duration={startSkillAnim + 1800}><li className=\"skill__item\"><EnterText>Ruby on Rails</EnterText></li></LazyLoad>\n          </ul>\n        </div>\n        <div className='scroll'>\n          <LazyLoad duration={startSkillAnim + 2400}><EnterText>scroll down ↓</EnterText></LazyLoad>\n        </div>\n      </div>\n      <div className=\"company-info\">\n        <table>\n          <tbody>\n            <tr>\n              <th>社名</th><td>株式会社nodel（ノデル）<br />nodel inc.</td>\n            </tr>\n            <tr>\n              <th>所在地</th><td>東京都武蔵野市吉祥寺南町2丁目2-5</td>\n            </tr>\n            <tr>\n              <th>役員</th><td>代表取締役  菊地 哲郎</td>\n            </tr>\n            <tr>\n              <th>設立</th><td>2022年3月3日</td>\n            </tr>\n            <tr>\n              <th>資本</th><td>100万円</td>\n            </tr>\n            <tr>\n              <th>事業<br />内容</th>\n              <td>\n                <ul>\n                  <li>ホームページの企画、デザイン、制作、運営及び保守</li>\n                  <li>Web システムの企画、開発、保守、運用、販売及びその受託</li>\n                  <li>アプリケーションソフトウェアの企画、開発、保守、運用、販売及びその受託</li>\n                  <li>インターネットを利用した各種情報提供サービス業</li>\n                  <li>各種印刷物の企画、デザイン、制作</li>\n                  <li>前各号に附帯関連する一切の事業</li>\n                </ul>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className='copyright'>2022, nodel inc.</div>\n      <div className=\"logo-container\">\n        <LogoBg />\n      </div>\n      <div className=\"canvas-container\">\n        <Animation></Animation>\n      </div>\n    </div>\n  );\n}\n\nfunction LazyLoad(props) {\n  const [isLoad, setLoad] = useState(true)\n\n  setTimeout(() => {\n    setLoad(false)\n  }, props.duration)\n\n  return isLoad ? '' : props.children\n}\n\nfunction EnterText(props) {\n  const characterList = props.children.split('')\n\n  const [text, setText] = useState('');\n  const refText = useRef(text);\n\n  useEffect(() => {\n    refText.current = text;\n  }, [text]);\n\n  useEffect(() => {\n    let i = 0\n    const interval = setInterval(() => {\n      setText(refText.current + characterList[i])\n      i++\n      if (i > characterList.length - 1) {\n        clearInterval(interval);\n      }\n    }, 40);\n  // eslint-disable-next-line\n  }, []);\n\n  return (\n    <span>{text}</span>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}