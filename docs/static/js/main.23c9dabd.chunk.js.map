{"version":3,"sources":["github_icon.svg","Animation.js","App.js","index.js"],"names":["module","exports","colors","random","i","r","Math","position","color","round","length","scale","rotation","THREE","degToRad","data","Array","fill","map","args","Content","useSprings","from","config","mass","tension","friction","springs","set","useEffect","setInterval","delay","d","index","mesh","key","castShadow","receiveShadow","attach","meshStandardMaterial","roughness","metalness","Lights","intensity","angle","PI","penumbra","shadow-mapSize-width","shadow-mapSize-height","Animation","shadowMap","camera","fov","EnterText","props","characterList","children","split","useState","text","setText","refText","useRef","current","interval","clearInterval","App","className","href","target","rel","src","GitHubIcon","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23c9dabd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_icon.35aa1b9f.svg\";","import * as THREE from 'three'\nimport React, { useEffect } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport { useSprings, a } from 'react-spring/three'\n\nconst number = 35\nconst colors = ['#9a9a9a', '#cccccc', '#aaaaaa', '#bcbcbc', '#dddddd', '#ababab']\nconst random = i => {\n  const r = Math.random()\n  return {\n    position: [100 - Math.random() * 200, 100 - Math.random() * 200, i * 1.5],\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    scale: [1 + r * 14, 1 + r * 14, 1],\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)]\n  }\n}\n\nconst data = new Array(number).fill().map(() => {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10]\n  }\n})\n\nfunction Content() {\n  const [springs, set] = useSprings(number, i => ({\n    from: random(i),\n    ...random(i),\n    config: { mass: 20, tension: 150, friction: 50 }\n  }))\n  // eslint-disable-next-line\n  useEffect(() => void setInterval(() => set(i => ({ ...random(i), delay: i * 40 })), 3000), [])\n  return data.map((d, index) => (\n    <a.mesh key={index} {...springs[index]} castShadow receiveShadow>\n      <boxBufferGeometry attach=\"geometry\" args={d.args} />\n      <a.meshStandardMaterial attach=\"material\" color={springs[index].color} roughness={0.75} metalness={0.5} />\n    </a.mesh>\n  ))\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  )\n}\n\nexport default function Animation() {\n  return (\n    <Canvas shadowMap camera={{ position: [0, 0, 100], fov: 100 }}>\n      <Lights />\n      <Content />\n    </Canvas>\n  )\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport GitHubIcon from './github_icon.svg';\nimport './App.scss';\nimport Animation from './Animation'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"detail\">\n        <h1 className=\"detail__heading\"><EnterText>Kikuchi Tetsuro</EnterText></h1>\n        <p className=\"detail__text\"><EnterText>Front-end Development</EnterText><br/><EnterText>Web Design</EnterText></p>\n        <a className=\"logo\" href=\"https://github.com/kikuchi5555\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={GitHubIcon} alt=\"logo\" />\n        </a>\n      </div>\n      <div className=\"skill\">\n        <ul className=\"skill__list\">\n          <li className=\"skill__item\"><EnterText>HTML （pug / slim / ejs）</EnterText></li>\n          <li className=\"skill__item\"><EnterText>CSS (Sass / SCSS / Stylus)</EnterText></li>\n          <li className=\"skill__item\"><EnterText>JavaScript (ES6 or later)</EnterText></li>\n          <li className=\"skill__item\"><EnterText>jQuery</EnterText></li>\n          <li className=\"skill__item\"><EnterText>TypeScript</EnterText></li>\n          <li className=\"skill__item\"><EnterText>Vue.js</EnterText></li>\n          <li className=\"skill__item\"><EnterText>React</EnterText></li>\n          <li className=\"skill__item\"><EnterText>Angular.js</EnterText></li>\n          <li className=\"skill__item\"><EnterText>Ruby on Rails</EnterText></li>\n        </ul>\n      </div>\n      <Animation></Animation>\n    </div>\n  );\n}\n\nfunction EnterText(props) {\n  const characterList = props.children.split('')\n\n  const [text, setText] = useState('');\n  const refText = useRef(text);\n\n  useEffect(() => {\n    refText.current = text;\n  }, [text]);\n\n  useEffect(() => {\n    let i = 0\n    const interval = setInterval(() => {\n      setText(refText.current + characterList[i])\n      i++\n      if (i > characterList.length - 1) {\n        clearInterval(interval);\n      }\n    }, 50);\n  // eslint-disable-next-line\n  }, []);\n\n  return (\n    <span>{text}</span>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}