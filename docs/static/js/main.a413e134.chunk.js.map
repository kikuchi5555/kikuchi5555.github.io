{"version":3,"sources":["Animation.js","App.js","index.js"],"names":["Stars","group","useRef","theta","useFrame","r","Math","sin","THREE","degToRad","s","cos","current","rotation","set","scale","useMemo","color","Array","fill","map","i","random","geo","mat","coords","ref","p1","p2","p3","key","geometry","material","position","Animation","intensity","LazyLoad","props","useState","isLoad","setLoad","setTimeout","duration","children","EnterText","characterList","split","text","setText","refText","useEffect","interval","setInterval","length","clearInterval","App","className","startDetailAnim","href","target","rel","startSkillAnim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a413e134.chunk.js","sourcesContent":["import * as THREE from 'three/src/Three'\nimport React, { useRef, useMemo } from 'react'\n\nimport { Canvas, useFrame } from 'react-three-fiber'\n\nfunction Stars() {\n  let group = useRef()\n  let theta = 0\n  useFrame(() => {\n    // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)))\n    const s = Math.cos(THREE.Math.degToRad(theta * 5))\n    group.current.rotation.set(r, r, r)\n    group.current.scale.set(s, s, s)\n  })\n  const [geo, mat, coords] = useMemo(() => {\n    const geo = new THREE.SphereBufferGeometry(1, 10, 10)\n    const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color('#eeeeee') })\n    const coords = new Array(2000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat, coords]\n  }, [])\n  return (\n    <group ref={group}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n    </group>\n  )\n}\n\n\nexport default function Animation() {\n  return (\n    <Canvas>\n      <ambientLight color=\"lightblue\" />\n      <pointLight color=\"white\" intensity={1} position={[10, 10, 10]} />\n      <Stars />\n    </Canvas>\n  )\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport './App.scss';\nimport Animation from './Animation'\n\nfunction App() {\n  const startDetailAnim = 2500\n  const startSkillAnim = 3000\n\n  return (\n    <div className=\"app\">\n      <div className=\"detail\">\n        <h1 className=\"detail__heading\"><LazyLoad duration={startDetailAnim}><EnterText>Kikuchi Tetsuro</EnterText></LazyLoad></h1>\n        <p className=\"detail__text\">\n          <LazyLoad duration={startDetailAnim + 400}><EnterText>Front-end Development</EnterText><br/></LazyLoad>\n          <LazyLoad duration={startDetailAnim + 800}><EnterText>Web Design</EnterText><br/></LazyLoad>\n          <LazyLoad duration={startDetailAnim + 1200}><a href=\"https://github.com/kikuchi5555\" target=\"_blank\" rel=\"noopener noreferrer\"><EnterText>GitHub â†’</EnterText></a></LazyLoad>\n        </p>\n      </div>\n      <div className=\"skill\">\n        <ul className=\"skill__list\">\n          <LazyLoad duration={startSkillAnim}><li className=\"skill__item\"><EnterText>CSS(Sass/SCSS/Stylus)</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 400}><li className=\"skill__item\"><EnterText>JavaScript(ES6 or later)</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 800}><li className=\"skill__item\"><EnterText>jQuery</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 1000}><li className=\"skill__item\"><EnterText>TypeScript</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 1200}><li className=\"skill__item\"><EnterText>Vue.js</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 1400}><li className=\"skill__item\"><EnterText>React</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 1600}><li className=\"skill__item\"><EnterText>Angular.js</EnterText></li></LazyLoad>\n          <LazyLoad duration={startSkillAnim + 1800}><li className=\"skill__item\"><EnterText>Ruby on Rails</EnterText></li></LazyLoad>\n        </ul>\n      </div>\n      <Animation></Animation>\n    </div>\n  );\n}\n\nfunction LazyLoad(props) {\n  const [isLoad, setLoad] = useState(true)\n\n  setTimeout(() => {\n    setLoad(false)\n  }, props.duration)\n\n  return isLoad ? '' : props.children\n}\n\nfunction EnterText(props) {\n  const characterList = props.children.split('')\n\n  const [text, setText] = useState('');\n  const refText = useRef(text);\n\n  useEffect(() => {\n    refText.current = text;\n  }, [text]);\n\n  useEffect(() => {\n    let i = 0\n    const interval = setInterval(() => {\n      setText(refText.current + characterList[i])\n      i++\n      if (i > characterList.length - 1) {\n        clearInterval(interval);\n      }\n    }, 40);\n  // eslint-disable-next-line\n  }, []);\n\n  return (\n    <span>{text}</span>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}