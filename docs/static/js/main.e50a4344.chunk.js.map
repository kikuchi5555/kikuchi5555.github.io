{"version":3,"sources":["github_icon.svg","Animation.js","App.js","index.js"],"names":["module","exports","Octahedron","useState","active","setActive","hovered","setHover","useSpring","color","pos","scale","rotation","THREE","degToRad","config","mass","tension","friction","precision","props","line","position","attach","vertices","map","v","lineBasicMaterial","mesh","onClick","e","onPointerOver","onPointerOut","transparent","Stars","group","useRef","theta","useFrame","r","Math","sin","s","cos","current","set","useMemo","Array","fill","i","random","geo","mat","coords","ref","p1","p2","p3","key","geometry","material","Animation","intensity","EnterText","characterList","children","split","text","setText","refText","useEffect","interval","setInterval","length","clearInterval","App","className","href","target","rel","src","GitHubIcon","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e50a4344.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_icon.35aa1b9f.svg\";","import * as THREE from 'three/src/Three'\nimport React, { useState, useRef, useMemo } from 'react'\n// A THREE.js React renderer, see: https://github.com/drcmda/react-three-fiber\nimport { Canvas, useFrame } from 'react-three-fiber'\n// A React animation lib, see: https://github.com/react-spring/react-spring\n\nimport { useSpring, animated } from 'react-spring/three'\n\nfunction Octahedron() {\n  const [active, setActive] = useState(false)\n  const [hovered, setHover] = useState(false)\n  const vertices = [[-1, 0, 0], [0, 1, 0], [1, 0, 0], [0, -1, 0], [-1, 0, 0]]\n  const { color, pos, ...props } = useSpring({\n    color: active ? 'hotpink' : 'white',\n    pos: active ? [0, 0, 2] : [0, 0, 0],\n    'material-opacity': hovered ? 0.6 : 0.25,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    rotation: active ? [THREE.Math.degToRad(180), 0, THREE.Math.degToRad(45)] : [0, 0, 0],\n    config: { mass: 10, tension: 1000, friction: 300, precision: 0.00001 }\n  })\n  return (\n    <group>\n      <animated.line position={pos}>\n        <geometry attach=\"geometry\" vertices={vertices.map(v => new THREE.Vector3(...v))} />\n        <animated.lineBasicMaterial attach=\"material\" color={color} />\n      </animated.line>\n      <animated.mesh onClick={e => setActive(!active)} onPointerOver={e => setHover(true)} onPointerOut={e => setHover(false)} {...props}>\n        <octahedronGeometry attach=\"geometry\" />\n        <meshStandardMaterial attach=\"material\" color=\"grey\" transparent />\n      </animated.mesh>\n    </group>\n  )\n}\n\nfunction Stars() {\n  let group = useRef()\n  let theta = 0\n  useFrame(() => {\n    // Some things maybe shouldn't be declarative, we're in the render-loop here with full access to the instance\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.1)))\n    const s = Math.cos(THREE.Math.degToRad(theta * 2))\n    group.current.rotation.set(r, r, r)\n    group.current.scale.set(s, s, s)\n  })\n  const [geo, mat, coords] = useMemo(() => {\n    const geo = new THREE.SphereBufferGeometry(1, 10, 10)\n    const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color('lightblue') })\n    const coords = new Array(2000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat, coords]\n  }, [])\n  return (\n    <group ref={group}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n    </group>\n  )\n}\n\n\nexport default function Animation() {\n  return (\n    <Canvas>\n      <ambientLight color=\"lightblue\" />\n      <pointLight color=\"white\" intensity={1} position={[10, 10, 10]} />\n      <Octahedron />\n      <Stars />\n    </Canvas>\n  )\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport GitHubIcon from './github_icon.svg';\nimport './App.scss';\nimport Animation from './Animation'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"detail\">\n        <h1 className=\"detail__heading\"><EnterText>Kikuchi Tetsuro</EnterText></h1>\n        <p className=\"detail__text\"><EnterText>Front-end Development</EnterText><br/><EnterText>Web Design</EnterText></p>\n        <a className=\"logo\" href=\"https://github.com/kikuchi5555\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src={GitHubIcon} alt=\"logo\" />\n        </a>\n      </div>\n      <div className=\"skill\">\n        <ul className=\"skill__list\">\n          <li className=\"skill__item\"><EnterText>HTML （pug / slim / ejs）</EnterText></li>\n          <li className=\"skill__item\"><EnterText>CSS (Sass / SCSS / Stylus)</EnterText></li>\n          <li className=\"skill__item\"><EnterText>JavaScript (ES6 or later)</EnterText></li>\n          <li className=\"skill__item\"><EnterText>jQuery</EnterText></li>\n          <li className=\"skill__item\"><EnterText>TypeScript</EnterText></li>\n          <li className=\"skill__item\"><EnterText>Vue.js</EnterText></li>\n          <li className=\"skill__item\"><EnterText>React</EnterText></li>\n          <li className=\"skill__item\"><EnterText>Angular.js</EnterText></li>\n          <li className=\"skill__item\"><EnterText>Ruby on Rails</EnterText></li>\n        </ul>\n      </div>\n      <Animation></Animation>\n    </div>\n  );\n}\n\nfunction EnterText(props) {\n  const characterList = props.children.split('')\n\n  const [text, setText] = useState('');\n  const refText = useRef(text);\n\n  useEffect(() => {\n    refText.current = text;\n  }, [text]);\n\n  useEffect(() => {\n    let i = 0\n    const interval = setInterval(() => {\n      setText(refText.current + characterList[i])\n      i++\n      if (i > characterList.length - 1) {\n        clearInterval(interval);\n      }\n    }, 50);\n  // eslint-disable-next-line\n  }, []);\n\n  return (\n    <span>{text}</span>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}